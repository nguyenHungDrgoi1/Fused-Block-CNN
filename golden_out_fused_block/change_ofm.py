import os

MAX_LINE_LENGTH = 100

# ƒê·∫øm t·ªïng s·ªë d√≤ng trong file
def count_lines(filename):
    try:
        with open(filename, 'r') as file:
            return sum(1 for line in file)
    except FileNotFoundError:
        print(f"‚ùå File '{filename}' kh√¥ng t·ªìn t·∫°i!")
        return -1

# H√†m x·ª≠ l√Ω 1 PE
def process_pe_file(pe_id, OFFSET, tile):
    input_file = f"../Fused-Block-CNN/golden_out_fused_block/output_hex_folder/OFM1_PE{pe_id}.hex"
    output_file = f"../Fused-Block-CNN/golden_out_fused_block/output_hex_folder/OFM1_PE{pe_id}_change.hex"

    # ƒê·∫øm s·ªë d√≤ng trong file
    total_lines = count_lines(input_file)
    if total_lines < OFFSET + 1:
        print(f"‚ö†Ô∏è PE{pe_id}: File kh√¥ng ƒë·ªß {OFFSET + 1} d√≤ng ƒë·ªÉ gh√©p!")
        return

    try:
        with open(input_file, 'r') as in_file:
            lines = in_file.readlines()

        # M·ªü file output ƒë·ªÉ ghi
        with open(output_file, 'w') as out_file:
            # Ghi c√°c d√≤ng theo th·ª© t·ª±: d√≤ng i ‚Üí d√≤ng i + OFFSET ‚Üí d√≤ng i + a * OFFSET (a t·ª´ 1 ƒë·∫øn 8)
            for i in range(total_lines - OFFSET):
                # Chuy·ªÉn th√†nh ch·ªØ th∆∞·ªùng
                lines[i] = lines[i].lower()
                lines[i + OFFSET] = lines[i + OFFSET].lower()

                # Ghi d√≤ng i v√† d√≤ng i + OFFSET v√†o file output
                out_file.write(lines[i])
                out_file.write(lines[i + OFFSET])

                # Ghi th√™m c√°c d√≤ng i + a * OFFSET, v·ªõi a t·ª´ 2 ƒë·∫øn 8
                for a in range(2, tile + 1):
                    index = i + a * OFFSET
                    if index < total_lines:
                        lines[index] = lines[index].lower()
                        out_file.write(lines[index])

        print(f"‚úÖ PE{pe_id}: ƒê√£ ghi xong v√†o '{output_file}'")

    except FileNotFoundError:
        print(f"‚ùå PE{pe_id}: Kh√¥ng th·ªÉ m·ªü file input '{input_file}' ho·∫∑c file output '{output_file}'.")

# H√†m ch√≠nh
if __name__ == "__main__":
    # C·ªë ƒë·ªãnh tham s·ªë
    ofm_width = 56
    max_pe = 16
    ofm_channel = 128

    tile = 16 // max_pe
    OFFSET = ofm_width * ofm_width   # Kho·∫£ng c√°ch d√≤ng
    for pe in range(max_pe):
        process_pe_file(pe, OFFSET, tile)

    print(f"\nüöÄ ƒê√£ x·ª≠ l√Ω xong t·∫•t c·∫£ {max_pe} PE!")
